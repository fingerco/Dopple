on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  release:
    types: [published]

jobs:
  test:
    strategy:
      matrix:
        elixir: [1.13.2]
        otp: [24]

    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-elixir@v1
        with:
          otp-version: ${{ matrix.otp }}
          elixir-version: ${{ matrix.elixir }}
          experimental-otp: true
      - uses: reviewdog/action-setup@v1
        with:
          reviewdog_version: latest
      - name: Retrieve Mix Dependencies Cache
        uses: actions/cache@v1
        id: mix-cache
        with:
          path: deps
          key: ${{ runner.os }}-${{ matrix.otp }}-${{ matrix.elixir }}-mix-${{ hashFiles(format('{0}{1}', github.workspace, '/mix.lock')) }}
      - name: Retrieve Mix Build Cache
        uses: actions/cache@v1
        id: mix-build-cache
        with:
          path: _build
          key: ${{ runner.os }}-${{ matrix.otp }}-${{ matrix.elixir }}-mix-build-${{ hashFiles(format('{0}{1}', github.workspace, '/mix.lock')) }}
      - name: Install Mix Dependencies
        if: steps.mix-cache.outputs.cache-hit != 'true'
        run: |
          mix local.rebar --force
          mix local.hex --force
          mix deps.get
          mix deps.compile
      - run: mix test
      - run: mix format
      - name: Commit Format Changes
        uses: stefanzweifel/git-auto-commit-action@v4
        with:
          commit_message: Formatting changes (Automated `mix format`)
          branch: ${{ github.head_ref }}
      
      - name: Retrieve PLT Cache
        uses: actions/cache@v1
        id: plt-cache
        with:
          path: priv/plts
          key: ${{ runner.os }}-${{ matrix.otp }}-${{ matrix.elixir }}-plts-${{ hashFiles(format('{0}{1}', github.workspace, '/mix.lock')) }}

      - name: Create PLTs
        if: steps.plt-cache.outputs.cache-hit != 'true'
        run: |
          mkdir -p priv/plts
          mix dialyzer --plt

      - name: Run Credo (PR Review)
        if: github.event_name == 'pull_request'
        env:
          REVIEWDOG_GITHUB_API_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          mix credo suggest --strict --format=flycheck

      - name: Run Credo (Non-PR)
        if: github.event_name != 'pull_request'
        run: |
          mix credo --strict
      
      - name: Run Dialyzer
        run: mix dialyzer --no-check

  deploy:
    if: github.event_name == 'release'
    needs: test
    environment: HEX_DEPLOY_API
    runs-on: ubuntu-latest
    strategy:
      matrix:
        elixir: [1.13.2]
        otp: [24]
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-elixir@v1
        with:
          otp-version: ${{ matrix.otp }}
          elixir-version: ${{ matrix.elixir }}
          experimental-otp: true
      - run:
          mix local.rebar --force
          mix local.hex --force
          mix deps.get
          mix hex.build
          mix hex.publish --yes
        env:
          HEX_API_KEY: ${{ secrets.HEX_API_KEY }}